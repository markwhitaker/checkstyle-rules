<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">


<!--
    A CheckStyle rules file for Android projects.

    Documentation on all CheckStyle modules:
    http://checkstyle.sourceforge.net/
-->

<!--
    http://checkstyle.sourceforge.net/config.html#Checker
-->
<module name="Checker">

    <!--
        Allows rules to be suppressed for specific files/lines as per a provided suppressions file
        http://checkstyle.sourceforge.net/config_filters.html#SuppressionFilter
    -->
    <module name="SuppressionFilter">
        <property name="file" value="checkstyle_suppressions.xml"/>
    </module>

    <!--
        Checks individual Java source files and defines properties that are applicable to checking such files
        http://checkstyle.sourceforge.net/config.html#TreeWalker
    -->
    <module name="TreeWalker">

        <!--
            Checks abstract class names begin with Abstract
            http://checkstyle.sourceforge.net/config_naming.html#AbstractClassName
        -->
        <module name="AbstractClassName"/>

        <!--
            Checks annotations are on their own lines
            http://checkstyle.sourceforge.net/config_annotation.html#AnnotationLocation
        -->
        <module name="AnnotationLocation">

        <!--
            Checks for long anonymous inner classes
            http://checkstyle.sourceforge.net/config_sizes.html#AnonInnerLength
        -->
        <module name="AnonInnerLength">

        <!--
            Checks the style of array type definitions
            http://checkstyle.sourceforge.net/config_misc.html#ArrayTypeStyle
        -->
        <module name="ArrayTypeStyle"/>

        <!--
            Checks for redundant nested blocks
            http://checkstyle.sourceforge.net/config_blocks.html#AvoidNestedBlocks
        -->
        <module name="AvoidNestedBlocks"/>

        <!--
            Restricts the number of number of &&, ||, &, | and ^ in an expression
            http://checkstyle.sourceforge.net/config_metrics.html#BooleanExpressionComplexity
        -->
        <module name="BooleanExpressionComplexity">

        <!--
            Checks for sensible naming of catch parameters
            http://checkstyle.sourceforge.net/config_naming.html#CatchParameterName
        -->
        <module name="CatchParameterName">

        <!--
            Checks that type parameter names are a single uppercase letter
            http://checkstyle.sourceforge.net/config_naming.html#ClassTypeParameterName
        -->
        <module name="ClassTypeParameterName"/>

        <!--
            Checks comments have the same indentation as surrounding code
            http://checkstyle.sourceforge.net/config_misc.html#CommentsIndentation
        -->
        <module name="CommentsIndentation">

        <!--
            Checks constants names are UPPERCASE_WITH_UNDERSCORES
            http://checkstyle.sourceforge.net/config_naming.html#ConstantName
        -->
        <module name="ConstantName"/>

        <!--
            Checks that classes which define a covariant equals() method also override method equals(Object).
            http://checkstyle.sourceforge.net/config_coding.html#CovariantEquals
        -->
        <module name="CovariantEquals">

        <!--
            Checks that the parts of a class or interface declaration appear in the order suggested by the Code Conventions for the Java Programming Language
            http://checkstyle.sourceforge.net/config_coding.html#DeclarationOrder
        -->
        <module name="DeclarationOrder">

        <!--
            Check that the default is after all the cases in a switch statement
            http://checkstyle.sourceforge.net/config_coding.html#DefaultComesLast
        -->
        <module name="DefaultComesLast"/>

        <!--
            Checks that classes are designed for extension (only recommended for library projects)
            http://checkstyle.sourceforge.net/config_design.html#DesignForExtension
        -->
        <!--<module name="DesignForExtension"/>-->

        <!--
            Checks for empty blocks but does not validate sequential blocks
            http://checkstyle.sourceforge.net/config_blocks.html#EmptyBlock
        -->
        <module name="EmptyBlock"/>

        <!--
            Checks for empty catch blocks with few options to skip violation
            http://checkstyle.sourceforge.net/config_blocks.html#EmptyCatchBlock
        -->
        <module name="EmptyCatchBlock">

        <!--
            Checks the padding of an empty for initializer; that is whether a space is required at an empty for initializer, or such spaces are forbidden
            http://checkstyle.sourceforge.net/config_whitespace.html#EmptyForInitializerPad
        -->
        <module name="EmptyForIteratorPad"/>

        <!--
            Checks for empty line separators after header, package, all import declarations, fields, constructors, methods, nested classes, static initializers and instance initializers
            http://checkstyle.sourceforge.net/config_whitespace.html#EmptyLineSeparator
        -->
        <module name="EmptyLineSeparator">

        <!--
            Detects empty statements (standalone ';')
            http://checkstyle.sourceforge.net/config_coding.html#EmptyStatement
        -->
        <module name="EmptyStatement"/>

        <!--
            Checks that any combination of String literals is on the left side of an equals() comparison
            http://checkstyle.sourceforge.net/config_coding.html#EqualsAvoidNull
        -->
        <module name="EqualsAvoidNull"/>

        <!--
            Checks that classes that override equals() also override hashCode()
            http://checkstyle.sourceforge.net/config_coding.html#EqualsHashCode
        -->
        <module name="EqualsHashCode"/>

        <!--
            Checks if any class or object member explicitly initialized to default for its type value (null for object references, zero for numeric types and char and false for boolean)
            http://checkstyle.sourceforge.net/config_coding.html#ExplicitInitialization
        -->
        <module name="ExplicitInitialization"/>

        <!--
            Checks for fall through in switch statements Finds locations where a case contains Java code - but lacks a break, return, throw or continue statement
            http://checkstyle.sourceforge.net/config_coding.html#FallThrough
        -->
        <module name="FallThrough"/>

        <!--
            Checks for long source files
            http://checkstyle.sourceforge.net/config_sizes.html#FileLength
        -->
        <module name="FileLength"/>

        <!--
            Checks to see if a file contains a tab character
            http://checkstyle.sourceforge.net/config_whitespace.html#FileTabCharacter
        -->
        <module name="FileTabCharacter"/>

        <!--
            Checks that class which has only private constructors is declared as final.
            http://checkstyle.sourceforge.net/config_design.html#FinalClass
        -->
        <module name="FinalClass"/>

        <!--
            Ensures that local variables that never get their values changed, must be declared final
            http://checkstyle.sourceforge.net/config_coding.html#FinalLocalVariable

            TIP: get Android Studio to do this automatically:
            Settings
                > Editor
                    > Code Style
                        > Java
                            > Make generated local variables final
        -->
        <module name="FinalLocalVariable"/>

        <!--
            Check that method/constructor/catch/foreach parameters are final
            http://checkstyle.sourceforge.net/config_misc.html#FinalParameters

            TIP: get Android Studio to do this automatically:
            Settings
                > Editor
                    > Code Style
                        > Java
                            > Make generated parameters final
        -->
        <module name="FinalParameters"/>

        <!--
            Checks that the whitespace around the Generic tokens < and > are correct to the typical convention
            http://checkstyle.sourceforge.net/config_whitespace.html#GenericWhitespace
        -->
        <module name="GenericWhitespace"/>

        <!--
            Checks that a local variable or a parameter does not shadow a field that is defined in the same class
            http://checkstyle.sourceforge.net/config_coding.html#HiddenField
        -->
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
        </module>

        <!--
            Make sure that utility classes (classes that contain only static methods) do not have a public constructor
            http://checkstyle.sourceforge.net/config_design.html#HideUtilityClassConstructor
        -->
        <module name="HideUtilityClassConstructor"/>

        <!--
            Catching java.lang.Exception, java.lang.Error or java.lang.RuntimeException is almost never acceptable
            http://checkstyle.sourceforge.net/config_coding.html#IllegalCatch
        -->
        <module name="IllegalCatch"/>

        <!--
            Checks for imports from a set of illegal packages (defaults to sun.* packages)
            http://checkstyle.sourceforge.net/config_imports.html#IllegalImport
        -->
        <module name="IllegalImport"/>

        <!--
            Checks for illegal instantiations where a factory method is preferred
            http://checkstyle.sourceforge.net/config_coding.html#IllegalInstantiation
        -->
        <module name="IllegalInstantiation"/>

        <!--
            Throwing java.lang.Error or java.lang.RuntimeException is almost never acceptable
            http://checkstyle.sourceforge.net/config_coding.html#IllegalThrows
        -->
        <module name="IllegalThrows"/>

        <!--
            Prevent octal literals
            http://checkstyle.sourceforge.net/config_coding.html#IllegalTokenText
        -->
        <module name="IllegalTokenText">
            <property name="tokens" value="NUM_INT,NUM_LONG"/>
            <property name="format" value="^0[^lx]"/>
            <property name="ignoreCase" value="true"/>
        </module>

        <!--
            Checks correct indentation of Java code
            http://checkstyle.sourceforge.net/config_misc.html#Indentation
        -->
        <module name="Indentation"/>

        <!--
            Checks for assignments in subexpressions, such as in String s = Integer.toString(i = 2);
            http://checkstyle.sourceforge.net/config_coding.html#InnerAssignment
        -->
        <module name="InnerAssignment"/>

        <!--
            Check nested (internal) classes/interfaces are declared at the bottom of the class after all method and field declarations
            http://checkstyle.sourceforge.net/config_design.html#InnerTypeLast
        -->
        <module name="InnerTypeLast"/>

        <!--
            Implements Bloch, Effective Java, Item 17 - Use Interfaces only to define types
            http://checkstyle.sourceforge.net/config_design.html#InterfaceIsType
        -->
        <module name="InterfaceIsType"/>

        <!--
            Checks all public methods have a Javadoc comment
            http://checkstyle.sourceforge.net/config_javadoc.html#JavadocMethod
        -->
        <module name="JavadocMethod">
            <property name="scope" value="public"/>
        </module>

        <!--
            Checks all public/protected/package-visible types have a Javadoc comment
            http://checkstyle.sourceforge.net/config_javadoc.html#JavadocType
        -->
        <module name="JavadocType">
            <property name="scope" value="package"/>
        </module>

        <!--
            Checks for the placement of left curly braces ('{') for code blocks
            http://checkstyle.sourceforge.net/config_blocks.html#LeftCurly
        -->
        <module name="LeftCurly"/>

        <!--
            Checks for long lines
            URL
        -->
        <module name="LineLength">
            <property name="max" value="120">
        </module>

        <!--
            Ensure variable names don't start with a single lowercase letter - reject iInteger-style names
            http://checkstyle.sourceforge.net/config_naming.html#LocalFinalVariableName
            http://checkstyle.sourceforge.net/config_naming.html#LocalVariableName
            http://checkstyle.sourceforge.net/config_naming.html#MemberName
            http://checkstyle.sourceforge.net/config_naming.html#ParameterName
            http://checkstyle.sourceforge.net/config_naming.html#StaticVariableName
        -->
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z]{2}[a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Variable name ''{0}'' must not start with a single lowercase letter or contain underscores"/>
        </module>
        <module name="LocalVariableName">
            <property name="format" value="^[a-z]{2}[a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Variable name ''{0}'' must not start with a single lowercase letter or contain underscores"/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z]{2}[a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Member name ''{0}'' must start with two lowercase letters and may not contain underscores"/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z]{2}[a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Variable name ''{0}'' must not start with a single lowercase letter or contain underscores"/>
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^[a-z]{2}[a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Member name ''{0}'' must not start with a single lowercase letter or contain underscores"/>
        </module>

        <!--
            http://checkstyle.sourceforge.net/config_coding.html#MagicNumber
            Checks for magic numbers (ignores -1, 0, 1, 2 by default)
        -->
        <module name="MagicNumber"/>

        <!--
            Checks that method names conform to Java standard
            http://checkstyle.sourceforge.net/config_naming.html#MethodName
        -->
        <module name="MethodName"/>

        <!--
            Checks the padding between the identifier of a method definition, constructor definition, method call, or constructor invocation; and the left parenthesis of the parameter list
            http://checkstyle.sourceforge.net/config_whitespace.html#MethodParamPad
        -->
        <module name="MethodParamPad">
            <property name="allowLineBreaks" value="true"/>
        </module>

        <!--
            Checks that class type parameter names conform to a format specified by the format property
            http://checkstyle.sourceforge.net/config_naming.html#MethodTypeParameterName
        -->
        <module name="MethodTypeParameterName"/>

        <!--
            Checks that classes (except abstract one) define a ctor and don't rely on the default one
            http://checkstyle.sourceforge.net/config_coding.html#MissingCtor
        -->
        <!-- <module name="MissingCtor"> -->

        <!--
            Checks that switch statement has "default" clause
            http://checkstyle.sourceforge.net/config_coding.html#MissingSwitchDefault
        -->
        <module name="MissingSwitchDefault"/>

        <!--
            Check for ensuring that for loop control variables are not modified inside the for block
            http://checkstyle.sourceforge.net/config_coding.html#ModifiedControlVariable
        -->
        <module name="ModifiedControlVariable"/>

        <!--
            Checks that the order of modifiers conforms to the suggestions in the Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3
            http://checkstyle.sourceforge.net/config_modifier.html#ModifierOrder
        -->
        <module name="ModifierOrder"/>

        <!--
            Checks for multiple occurrences of the same string literal within a single file
            http://checkstyle.sourceforge.net/config_coding.html#MultipleStringLiterals
        -->
        <module name="MultipleStringLiterals"/>

        <!--
            Checks that each variable declaration is in its own statement and on its own line
            http://checkstyle.sourceforge.net/config_coding.html#MultipleVariableDeclarations
        -->
        <module name="MultipleVariableDeclarations"/>

        <!--
            Checks for braces around code blocks
            http://checkstyle.sourceforge.net/config_blocks.html#NeedBraces
        -->
        <module name="NeedBraces"/>

        <!--
            Restricts nested for blocks to a specified depth
            http://checkstyle.sourceforge.net/config_coding.html#NestedForDepth
        -->
        <module name="NestedForDepth">
            <property name="max" value="3">
        </module>

        <!--
            Restricts nested if-else blocks to a specified depth
            http://checkstyle.sourceforge.net/config_coding.html#NestedIfDepth
        -->
        <module name="NestedIfDepth">
            <property name="max" value="3">
        </module>

        <!--
            Restricts nested try blocks to a specified depth
            http://checkstyle.sourceforge.net/config_coding.html#NestedTryDepth
        -->
        <module name="NestedTryDepth">
            <property name="max" value="3">
        </module>

        <!--
            Checks that there is a newline at the end of each file
            http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile
        -->
        <module name="NewlineAtEndOfFile">
            <property name="lineSeparator" value="lf"/>
        </module>

        <!--
            Checks that the clone method is not overridden from the Object class
            http://checkstyle.sourceforge.net/config_coding.html#NoClone
        -->
        <module name="NoClone"/>

        <!--
            Checks that no method having zero parameters is defined using the name finalize
            http://checkstyle.sourceforge.net/config_coding.html#NoFinalizer
        -->
        <module name="NoFinalizer"/>

        <!--
            Checks that there is no whitespace after a token
            http://checkstyle.sourceforge.net/config_whitespace.html#NoWhitespaceAfter
        -->
        <module name="NoWhitespaceAfter"/>

        <!--
            Checks that there is no whitespace before a token
            http://checkstyle.sourceforge.net/config_whitespace.html#NoWhitespaceBefore
        -->
        <module name="NoWhitespaceBefore"/>

        <!--
            Checks that there is only one statement per line
            http://checkstyle.sourceforge.net/config_coding.html#OneStatementPerLine
        -->
        <module name="OneStatementPerLine"/>

        <!--
            Checks that each top-level class, interfaces or enum resides in a source file of its own
            http://checkstyle.sourceforge.net/config_design.html#OneTopLevelClass
        -->
        <module name="OneTopLevelClass"/>

        <!--
            Checks line wrapping for operators
            http://checkstyle.sourceforge.net/config_whitespace.html#OperatorWrap
        -->
        <module name="OperatorWrap"/>

        <!--
            Checks that the outer type name and the file name match
            http://checkstyle.sourceforge.net/config_misc.html#OuterTypeFilename
        -->
        <module name="OuterTypeFilename"/>

        <!--
            Checks that overload methods are grouped together
            http://checkstyle.sourceforge.net/config_coding.html#OverloadMethodsDeclarationOrder
        -->
        <module name="OverloadMethodsDeclarationOrder"/>

        <!--
            Checks that package names conform to a format specified by the format property
            http://checkstyle.sourceforge.net/config_naming.html#PackageName
        -->
        <module name="PackageName"/>

        <!--
            Checks the number of parameters that a method or constructor has
            http://checkstyle.sourceforge.net/config_sizes.html#ParameterNumber
        -->
        <module name="ParameterNumber"/>

        <!--
            Checks the padding of parentheses
            http://checkstyle.sourceforge.net/config_whitespace.html#ParenPad
        -->
        <module name="ParenPad"/>

        <!--
            Checks for imports that are redundant
            http://checkstyle.sourceforge.net/config_imports.html#RedundantImport
        -->
        <module name="RedundantImport"/>

        <!--
            Checks for redundant modifiers
            http://checkstyle.sourceforge.net/config_modifier.html#RedundantModifier
        -->
        <module name="RedundantModifier"/>

        <!--
            Checks for Android Color constants
            http://checkstyle.sourceforge.net/config_regexp.html#RegexpSinglelineJava
        -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="\bColor.(BLACK|DKGRAY|GRAY|LTGRAY|WHITE|RED|GREEN|BLUE|YELLOW|CYAN|MAGENTA)\b"/>
            <property name="message" value="Android Color constant should be replaced with a value defined in a resource file"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <!--
            Checks that code doesn't rely on the "this" default
            http://checkstyle.sourceforge.net/config_coding.html#RequireThis
        -->
        <module name="RequireThis"/>

        <!--
            Restricts return statements to a specified count (default = 2)
            http://checkstyle.sourceforge.net/config_coding.html#ReturnCount
        -->
        <module name="ReturnCount"/>

        <!--
            Checks the placement of right curly braces
            http://checkstyle.sourceforge.net/config_blocks.html#RightCurly
        -->
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>

        <!--
            Checks for overly complicated boolean expressions
            http://checkstyle.sourceforge.net/config_coding.html#SimplifyBooleanExpression
        -->
        <module name="SimplifyBooleanExpression"/>

        <!--
            Checks for overly complicated boolean return statements
            http://checkstyle.sourceforge.net/config_coding.html#SimplifyBooleanReturn
        -->
        <module name="SimplifyBooleanReturn"/>

        <!--
            Checks that non-whitespace characters are separated by no more than one whitespace
            http://checkstyle.sourceforge.net/config_whitespace.html#SingleSpaceSeparator
        -->
        <module name="SingleSpaceSeparator"/>

        <!--
            Checks that string literals are not used with == or !=
            http://checkstyle.sourceforge.net/config_coding.html#StringLiteralEquality
        -->
        <module name="StringLiteralEquality"/>

        <!--
            Checks for TODO comments
            http://checkstyle.sourceforge.net/config_misc.html#TodoComment
        -->
        <module name="TodoComment">
            <property name="format" value="(TODO|FIXME|todo|fixme)"/>
        </module>

        <!--
            Checks the padding of parentheses for typecasts
            http://checkstyle.sourceforge.net/config_whitespace.html#TypecastParenPad
        -->
        <module name="TypecastParenPad"/>

        <!--
            Checks that type names conform to Java standard naming
            http://checkstyle.sourceforge.net/config_naming.html#TypeName
        -->
        <module name="TypeName"/>

        <!--
            Checks for unused import statements
            http://checkstyle.sourceforge.net/config_imports.html#UnusedImports
        -->
        <module name="UnusedImports"/>

        <!--
            Checks that long constants are defined with an uppercase L
            http://checkstyle.sourceforge.net/config_misc.html#UpperEll
        -->
        <module name="UpperEll"/>

        <!--
            Checks visibility of class members
            http://checkstyle.sourceforge.net/config_design.html#VisibilityModifier
        -->
        <module name="VisibilityModifier"/>

        <!--
            Checks that a token is followed by whitespace, with the exception that it does not check for whitespace after the semicolon of an empty for iterator
            http://checkstyle.sourceforge.net/config_whitespace.html#WhitespaceAfter
        -->
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI"/>
        </module>

        <!--
            Checks that a token is surrounded by whitespace
            http://checkstyle.sourceforge.net/config_whitespace.html#WhitespaceAround
        -->
        <module name="WhitespaceAround"/>

        <!-- Ensure that the TAG value matches the class name. -->
        <!-- See https://stackoverflow.com/a/47166160/440921 for details.  -->
        <module name="LocationReference">
            <property name="variableNames" value="TAG" />
            <property name="location" value="simpleclass"/>
        </module>
    </module>
</module>
